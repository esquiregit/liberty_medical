<?php
    require_once 'conn.php';
    require_once 'methods.php';
    require_once 'charge.php';

	class CompactChemistry {

        // create a compact_chemistry record
        public static function create_compact_chemistry($patient_id, $sodium, $sodium_flag, $potassium, $potassium_flag, $chloride, $chloride_flag, $urea, $urea_flag, $creatinine, $creatinine_flag, $got_ast, $got_ast_flag, $gpt_alt, $gpt_alt_flag, $alkaline_phos, $alkaline_phos_flag, $ggt, $ggt_flag, $bilirubin_total, $bilirubin_total_flag, $bili_indirect, $bili_indirect_flag, $bilirubin_direct, $bilirubin_direct_flag, $protein_total, $protein_total_flag, $albumin, $albumin_flag, $globulin, $globulin_flag, $cholesterol_total, $cholesterol_total_flag, $triglycerides, $triglycerides_flag, $hdl, $hdl_flag, $ldl, $ldl_flag, $coronary_risk, $coronary_risk_flag, $uric_acid, $uric_acid_flag, $fbs, $fbs_flag, $comments, $added_by, $conn){
            $invoice_id = Methods::get_invoice_id('Compact Chemistry', $conn);
            $amount     = Charge::read_charge('24', $conn);
            try{
                $query = $conn->prepare('INSERT INTO compact_chemistry(invoice_id, patient_id, sodium, sodium_flag, potassium, potassium_flag, chloride, chloride_flag, urea, urea_flag, creatinine, creatinine_flag, got_ast, got_ast_flag, gpt_alt, gpt_alt_flag, alkaline_phos, alkaline_phos_flag, ggt, ggt_flag, bilirubin_total, bilirubin_total_flag, bili_indirect, bili_indirect_flag, bilirubin_direct, bilirubin_direct_flag, protein_total, protein_total_flag, albumin, albumin_flag, globulin, globulin_flag, cholesterol_total, cholesterol_total_flag, triglycerides, triglycerides_flag, hdl, hdl_flag, ldl, ldl_flag, coronary_risk, coronary_risk_flag, uric_acid, uric_acid_flag, fbs, fbs_flag, comments, added_by)  VALUES(:invoice_id, :patient_id, :sodium, :sodium_flag, :potassium, :potassium_flag, :chloride, :chloride_flag, :urea, :urea_flag, :creatinine, :creatinine_flag, :got_ast, :got_ast_flag, :gpt_alt, :gpt_alt_flag, :alkaline_phos, :alkaline_phos_flag, :ggt, :ggt_flag, :bilirubin_total, :bilirubin_total_flag, :bili_indirect, :bili_indirect_flag, :bilirubin_direct, :bilirubin_direct_flag, :protein_total, :protein_total_flag, :albumin, :albumin_flag, :globulin, :globulin_flag, :cholesterol_total, :cholesterol_total_flag, :triglycerides, :triglycerides_flag, :hdl, :hdl_flag, :ldl, :ldl_flag, :coronary_risk, :coronary_risk_flag, :uric_acid, :uric_acid_flag, :fbs, :fbs_flag, :comments, :added_by)');
                $query->execute([':invoice_id' => $invoice_id, ':patient_id' => $patient_id, ':sodium' => $sodium, ':sodium_flag' => $sodium_flag, ':potassium' => $potassium, ':potassium_flag' => $potassium_flag, ':chloride' => $chloride, ':chloride_flag' => $chloride_flag, ':urea' => $urea, ':urea_flag' => $urea_flag, ':creatinine' => $creatinine, ':creatinine_flag' => $creatinine_flag, ':got_ast' => $got_ast, ':got_ast_flag' => $got_ast_flag, ':gpt_alt' => $gpt_alt, ':gpt_alt_flag' => $gpt_alt_flag, ':alkaline_phos' => $alkaline_phos, ':alkaline_phos_flag' => $alkaline_phos_flag, ':ggt' => $ggt, ':ggt_flag' => $ggt_flag, ':bilirubin_total' => $bilirubin_total, ':bilirubin_total_flag' => $bilirubin_total_flag, ':bili_indirect' => $bili_indirect, ':bili_indirect_flag' => $bili_indirect_flag, ':bilirubin_direct' => $bilirubin_direct, ':bilirubin_direct_flag' => $bilirubin_direct_flag, ':protein_total' => $protein_total, ':protein_total_flag' => $protein_total_flag, ':albumin' => $albumin, ':albumin_flag' => $albumin_flag, ':globulin' => $globulin, ':globulin_flag' => $globulin_flag, ':cholesterol_total' => $cholesterol_total, ':cholesterol_total_flag' => $cholesterol_total_flag, ':triglycerides' => $triglycerides, ':triglycerides_flag' => $triglycerides_flag, ':hdl' => $hdl, ':hdl_flag' => $hdl_flag, ':ldl' => $ldl, ':ldl_flag' => $ldl_flag, ':coronary_risk' => $coronary_risk, ':coronary_risk_flag' => $coronary_risk_flag, ':uric_acid' => $uric_acid, ':uric_acid_flag' => $uric_acid_flag, ':fbs' => $fbs, ':fbs_flag' => $fbs_flag, ':comments' => $comments, ':added_by' => $added_by]);

                return true;
            }catch(PDOException $ex){
            	return false;
            }
        }

        // fetch all compact_chemistry records
        public static function read_compact_chemistrys($conn){
            try{
                $query = $conn->prepare('SELECT bcl.id, bcl.invoice_id, bcl.patient_id, bcl.sodium, bcl.sodium_flag, bcl.potassium, bcl.potassium_flag, bcl.chloride, bcl.chloride_flag, bcl.urea, bcl.urea_flag, bcl.creatinine, bcl.creatinine_flag, bcl.got_ast, bcl.got_ast_flag, bcl.gpt_alt, bcl.gpt_alt_flag, bcl.alkaline_phos, bcl.alkaline_phos_flag, bcl.ggt, bcl.ggt_flag, bcl.bilirubin_total, bcl.bilirubin_total_flag, bcl.bili_indirect, bcl.bili_indirect_flag, bcl.bilirubin_direct, bcl.bilirubin_direct_flag, bcl.protein_total, bcl.protein_total_flag, bcl.albumin, bcl.albumin_flag, bcl.globulin, bcl.globulin_flag, bcl.cholesterol_total, bcl.cholesterol_total_flag, bcl.triglycerides, bcl.triglycerides_flag, bcl.alkaline_phos, bcl.alkaline_phos_flag, bcl.hdl, bcl.hdl_flag, bcl.ldl, bcl.ldl_flag, bcl.coronary_risk, bcl.coronary_risk_flag, bcl.uric_acid, bcl.uric_acid_flag, bcl.fbs, bcl.fbs_flag, bcl.comments, bcl.added_by, bcl.date_added, p.date_of_birth, p.gender, p.first_name as pfirst_name, p.middle_name as pmiddle_name, p.last_name as plast_name, u.first_name as ufirst_name, u.other_name as uother_name, u.last_name as ulast_name FROM compact_chemistry bcl INNER JOIN patients p ON bcl.patient_id = p.patient_id INNER JOIN users u ON bcl.added_by = u.staff_id');
                $query->execute();

                return $query->fetchAll(PDO::FETCH_OBJ);
            }catch(PDOException $ex){}
        }

        // fetch a compact_chemistry record
        public static function read_compact_chemistry($id, $conn){
            try{
                $query = $conn->prepare('SELECT bcl.id, bcl.invoice_id, bcl.patient_id, bcl.sodium, bcl.sodium_flag, bcl.potassium, bcl.potassium_flag, bcl.chloride, bcl.chloride_flag, bcl.urea, bcl.urea_flag, bcl.creatinine, bcl.creatinine_flag, bcl.got_ast, bcl.got_ast_flag, bcl.gpt_alt, bcl.gpt_alt_flag, bcl.alkaline_phos, bcl.alkaline_phos_flag, bcl.ggt, bcl.ggt_flag, bcl.bilirubin_total, bcl.bilirubin_total_flag, bcl.bili_indirect, bcl.bili_indirect_flag, bcl.bilirubin_direct, bcl.bilirubin_direct_flag, bcl.protein_total, bcl.protein_total_flag, bcl.albumin, bcl.albumin_flag, bcl.globulin, bcl.globulin_flag, bcl.cholesterol_total, bcl.cholesterol_total_flag, bcl.triglycerides, bcl.triglycerides_flag, bcl.alkaline_phos, bcl.alkaline_phos_flag, bcl.hdl, bcl.hdl_flag, bcl.ldl, bcl.ldl_flag, bcl.coronary_risk, bcl.coronary_risk_flag, bcl.uric_acid, bcl.uric_acid_flag, bcl.fbs, bcl.fbs_flag, bcl.comments, bcl.added_by, bcl.date_added, p.date_of_birth, p.gender, p.first_name as pfirst_name, p.middle_name as pmiddle_name, p.last_name as plast_name, u.first_name as ufirst_name, u.other_name as uother_name, u.last_name as ulast_name FROM compact_chemistry bcl INNER JOIN patients p ON bcl.patient_id = p.patient_id INNER JOIN users u ON bcl.added_by = u.staff_id WHERE bcl.id = :id');
                $query->execute([':id' => $id]);

                return $query->fetch(PDO::FETCH_OBJ);
            }catch(PDOException $ex){}
        }

        // update a compact_chemistry record
        public static function update_compact_chemistry($id, $patient_id, $sodium, $sodium_flag, $potassium, $potassium_flag, $chloride, $chloride_flag, $urea, $urea_flag, $creatinine, $creatinine_flag, $got_ast, $got_ast_flag, $gpt_alt, $gpt_alt_flag, $alkaline_phos, $alkaline_phos_flag, $ggt, $ggt_flag, $bilirubin_total, $bilirubin_total_flag, $bili_indirect, $bili_indirect_flag, $bilirubin_direct, $bilirubin_direct_flag, $protein_total, $protein_total_flag, $albumin, $albumin_flag, $globulin, $globulin_flag, $cholesterol_total, $cholesterol_total_flag, $triglycerides, $triglycerides_flag, $hdl, $hdl_flag, $ldl, $ldl_flag, $coronary_risk, $coronary_risk_flag, $uric_acid, $uric_acid_flag, $fbs, $fbs_flag, $comments, $conn) {
            try{
                $query = $conn->prepare('UPDATE compact_chemistry SET patient_id = :patient_id, sodium = :sodium, sodium_flag = :sodium_flag, potassium = :potassium, potassium_flag = :potassium_flag, chloride = :chloride, chloride_flag = :chloride_flag, urea = :urea, urea_flag = :urea_flag, creatinine = :creatinine, creatinine_flag = :creatinine_flag, got_ast = :got_ast, got_ast_flag = :got_ast_flag, gpt_alt = :gpt_alt, gpt_alt_flag = :gpt_alt_flag, alkaline_phos = :alkaline_phos, alkaline_phos_flag = :alkaline_phos_flag, ggt = :ggt, ggt_flag = :ggt_flag, bilirubin_total = :bilirubin_total, bilirubin_total_flag = :bilirubin_total_flag, bili_indirect = :bili_indirect, bili_indirect_flag = :bili_indirect_flag, bilirubin_direct = :bilirubin_direct, bilirubin_direct_flag = :bilirubin_direct_flag, protein_total = :protein_total, protein_total_flag = :protein_total_flag, albumin = :albumin, albumin_flag = :albumin_flag, globulin = :globulin, globulin_flag = :globulin_flag, cholesterol_total = :cholesterol_total, cholesterol_total_flag = :cholesterol_total_flag, triglycerides = :triglycerides, triglycerides_flag = :triglycerides_flag, hdl = :hdl, hdl_flag = :hdl_flag, ldl = :ldl, ldl_flag = :ldl_flag, coronary_risk = :coronary_risk, coronary_risk_flag = :coronary_risk_flag, uric_acid = :uric_acid, uric_acid_flag = :uric_acid_flag, fbs = :fbs, fbs_flag = :fbs_flag, comments = :comments WHERE id = :id AND patient_id = :patient_id');
                $query->execute([':sodium' => $sodium, ':sodium_flag' => $sodium_flag, ':potassium' => $potassium, ':potassium_flag' => $potassium_flag, ':chloride' => $chloride, ':chloride_flag' => $chloride_flag, ':urea' => $urea, ':urea_flag' => $urea_flag, ':creatinine' => $creatinine, ':creatinine_flag' => $creatinine_flag, ':got_ast' => $got_ast, ':got_ast_flag' => $got_ast_flag, ':gpt_alt' => $gpt_alt, ':gpt_alt_flag' => $gpt_alt_flag, ':alkaline_phos' => $alkaline_phos, ':alkaline_phos_flag' => $alkaline_phos_flag, ':ggt' => $ggt, ':ggt_flag' => $ggt_flag, ':bilirubin_total' => $bilirubin_total, ':bilirubin_total_flag' => $bilirubin_total_flag, ':bili_indirect' => $bili_indirect, ':bili_indirect_flag' => $bili_indirect_flag, ':bilirubin_direct' => $bilirubin_direct, ':bilirubin_direct_flag' => $bilirubin_direct_flag, ':protein_total' => $protein_total, ':protein_total_flag' => $protein_total_flag, ':albumin' => $albumin, ':albumin_flag' => $albumin_flag, ':globulin' => $globulin, ':globulin_flag' => $globulin_flag, ':cholesterol_total' => $cholesterol_total, ':cholesterol_total_flag' => $cholesterol_total_flag, ':triglycerides' => $triglycerides, ':triglycerides_flag' => $triglycerides_flag, ':hdl' => $hdl, ':hdl_flag' => $hdl_flag, ':ldl' => $ldl, ':ldl_flag' => $ldl_flag, ':coronary_risk' => $coronary_risk, ':coronary_risk_flag' => $coronary_risk_flag, ':uric_acid' => $uric_acid, ':uric_acid_flag' => $uric_acid_flag, ':fbs' => $fbs, ':fbs_flag' => $fbs_flag, ':comments' => $comments, ':patient_id' => $patient_id, ':id' => $id]);

                return true;
            }catch(PDOException $ex){
                return false;
            }
        }

	}